apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config-dev
  labels:
    env: development
data:
  spring.datasource.url: jdbc:postgresql://postgres-service:5432/example_db
  app.jwt.secret: z1OtmHiiIFG3Wiz7V3IXUHpm2Txgqaf7nISCBlK3CjAwMeYpIfXFxBd4NaQ57m8V
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets-dev
  labels:
    env: development
type: kubernetes.io/basic-auth
stringData:
  username: secret_username
  password: secret_password
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    app: postgres
spec:
  storageClassName: "host-manual-pg-data"
  capacity:
    storage: 512Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/pg-data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 512Mi
  storageClassName: postgres-pv-manual
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      name: db
      labels:
        app: postgres
    spec:
      nodeSelector:
        worker: main
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: example_db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: app-secrets-dev
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: app-secrets-dev
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command: [ "pg_isready", "-U", "user" ]
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: [ "pg_isready", "-U", "user" ]
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-app
  labels:
    app: spring-boot-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-app
  template:
    metadata:
      labels:
        app: spring-boot-app
    spec:
      containers:
        - name: k8s-example-microservice
          image: vpolkhovsky/swarm-k8s-example-microservice
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: app-config-dev
          env:
            - name: "spring.datasource.username"
              valueFrom:
                secretKeyRef:
                  key: username
                  name: app-secrets-dev
            - name: "spring.datasource.password"
              valueFrom:
                secretKeyRef:
                  key: password
                  name: app-secrets-dev
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-app-service
spec:
  selector:
    app: spring-boot-app
  ports:
    - port: 8080
      nodePort: 38080
  type: NodePort